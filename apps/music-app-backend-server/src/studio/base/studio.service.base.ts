/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Studio as PrismaStudio } from "@prisma/client";

export class StudioServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StudioCountArgs, "select">): Promise<number> {
    return this.prisma.studio.count(args);
  }

  async studios(args: Prisma.StudioFindManyArgs): Promise<PrismaStudio[]> {
    return this.prisma.studio.findMany(args);
  }
  async studio(
    args: Prisma.StudioFindUniqueArgs
  ): Promise<PrismaStudio | null> {
    return this.prisma.studio.findUnique(args);
  }
  async createStudio(args: Prisma.StudioCreateArgs): Promise<PrismaStudio> {
    return this.prisma.studio.create(args);
  }
  async updateStudio(args: Prisma.StudioUpdateArgs): Promise<PrismaStudio> {
    return this.prisma.studio.update(args);
  }
  async deleteStudio(args: Prisma.StudioDeleteArgs): Promise<PrismaStudio> {
    return this.prisma.studio.delete(args);
  }
}
